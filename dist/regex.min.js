var Regex=(()=>{var h=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var X=Object.prototype.hasOwnProperty;var Z=(e,t)=>{for(var r in t)h(e,r,{get:t[r],enumerable:!0})},z=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of B(t))!X.call(e,o)&&o!==r&&h(e,o,{get:()=>t[o],enumerable:!(n=v(t,o))||n.enumerable});return e};var J=e=>z(h({},"__esModule",{value:!0}),e);var se={};Z(se,{default:()=>oe,make:()=>W,partial:()=>_,regex:()=>P});var m=class{#e;constructor(t){this.#e=t}toString(){return String(this.#e)}};function _(e,...t){if(Array.isArray(e?.raw))return new m(e.raw.flatMap((r,n)=>n<e.raw.length-1?[r,t[n]]:r).join(""));if(!t.length)return new m(e??"");throw new Error(`Unexpected arguments: ${JSON.stringify([e,...t])}`)}var s={DEFAULT:"DEFAULT",CHAR_CLASS:"CHAR_CLASS",GROUP_NAME:"GROUP_NAME",ENCLOSED_TOKEN:"ENCLOSED_TOKEN",INTERVAL_QUANTIFIER:"INTERVAL_QUANTIFIER",INVALID_INCOMPLETE_TOKEN:"INVALID_INCOMPLETE_TOKEN"},E={DEFAULT:"CC_DEFAULT",RANGE:"CC_RANGE",ENCLOSED_TOKEN:"CC_ENCLOSED_TOKEN",Q_TOKEN:"CC_Q_TOKEN",INVALID_INCOMPLETE_TOKEN:"CC_INVALID_INCOMPLETE_TOKEN"},L=(()=>{let e=!0;try{new RegExp("(?i-ms:)")}catch{e=!1}return e})(),R="&!#$%*+,.:;<=>?@^`~";function C(e,t){return t===s.CHAR_CLASS?e.replace(new RegExp(String.raw`[()\[\]{}|\\/\-${R}]`,"g"),"\\$&"):e.replace(/[()\[\]{}|\\^$*+?.]/g,"\\$&")}function I(e){return e.replace(new RegExp(String.raw`^([${R}])(?!\1)`),(t,r,n)=>`\\${t}${n+1===e.length?"":t}`)}function x(e){return e.replace(/^\^/,"\\^^")}function O(e,t){return N(e,String.raw`\\0(?!\d)`,"\\u{0}",t)}function K(e,t,r){let n=0;for(let[o]of e.matchAll(new RegExp(`[${C(t+r)}]`,"g")))if(n+=o===t?1:-1,n<0)return r;return n>0?t:""}function k(e,t,r){let n=e.replace(/\\./gsu,"");if(n.at(-1)==="\\")return"\\";if(t===s.DEFAULT)return K(n,"(",")");if(t===s.CHAR_CLASS&&!(r===E.ENCLOSED_TOKEN||r===E.Q_TOKEN))return K(n,"[","]");if(t===s.ENCLOSED_TOKEN||t===s.INTERVAL_QUANTIFIER||r===E.ENCLOSED_TOKEN||r===E.Q_TOKEN){if(n.includes("}"))return"}"}else if(t===s.GROUP_NAME&&n.includes(">"))return">";return""}var T=new RegExp(String.raw`
  (?<groupN> \(\?< (?! [=!] ) | \\k< )
| (?<enclosedT> \\[pPu]\{ )
| (?<qT> \\q\{ )
| (?<intervalQ> \{ )
| (?<incompleteT> \\ (?:
    $
  | c (?! [A-Za-z] )
  | u (?! [A-Fa-f\d]{4} ) [A-Fa-f\d]{0,3}
  | x (?! [A-Fa-f\d]{2} ) [A-Fa-f\d]?
  )
)
| \\ (?:
    c [A-Za-z]
  | u [A-Fa-f\d]{4}
  | x [A-Fa-f\d]{2}
  | 0 \d+
)
| \[\^
| \(\?[:=!<>ims\-]
| (?<dp> [${R}] ) \k<dp>
| \\[1-9]\d*
| --
| \\? .
`.replace(/\s+/g,""),"gsu");function g(e,{regexContext:t=s.DEFAULT,charClassContext:r=E.DEFAULT,charClassDepth:n=0,lastPos:o=0}){T.lastIndex=o;let f;for(;f=T.exec(e);){let{0:i,groups:{groupN:l,enclosedT:u,qT:c,intervalQ:p,incompleteT:a}}=f;i==="["||i==="[^"?(n++,t=s.CHAR_CLASS,r=E.DEFAULT):i==="]"&&t===s.CHAR_CLASS?(n&&n--,n||(t=s.DEFAULT),r=E.DEFAULT):t===s.CHAR_CLASS?a?r=E.INVALID_INCOMPLETE_TOKEN:i==="-"?r=E.RANGE:u?r=E.ENCLOSED_TOKEN:c?r=E.Q_TOKEN:(i==="}"&&(r===E.ENCLOSED_TOKEN||r===E.Q_TOKEN)||r===E.INVALID_INCOMPLETE_TOKEN||r===E.RANGE)&&(r=E.DEFAULT):a?t=s.INVALID_INCOMPLETE_TOKEN:l?t=s.GROUP_NAME:u?t=s.ENCLOSED_TOKEN:p?t=s.INTERVAL_QUANTIFIER:(i===">"&&t===s.GROUP_NAME||i==="}"&&(t===s.ENCLOSED_TOKEN||t===s.INTERVAL_QUANTIFIER)||t===s.INVALID_INCOMPLETE_TOKEN)&&(t=s.DEFAULT)}return{regexContext:t,charClassContext:r,charClassDepth:n,lastPos:e.length}}function N(e,t,r,n){let o=new RegExp(String.raw`(?<found>${t})|\\?.`,"gsu"),f=0,i="";for(let l of e.matchAll(o)){let{0:u,groups:{found:c}}=l;if(c&&(!n||n===s.DEFAULT==!f)){r instanceof Function?i+=r(l):i+=r;continue}u==="["?f++:u==="]"&&f&&f--,i+=u}return i}function G(e,t,r){if(!new RegExp(t,"su").test(e))return!1;let n=new RegExp(String.raw`(?<found>${t})|\\?.`,"gsu"),o=0;for(let f of e.matchAll(n)){let{0:i,groups:{found:l}}=f;if(i==="[")o++;else if(o)i==="]"&&o--;else if(l)return r&&r(f),!0}return!1}function U(e){let t=/(?<capture>\((?:(?!\?)|\?<[^>]+>))|\\?./gsu;return Array.from(e.matchAll(t)).filter(r=>r.groups.capture).length}function V(e,t){return e.replace(/\\([1-9]\d*)|\\?./gsu,(r,n)=>n?"\\"+(Number(n)+t):r)}var Y=["Basic_Emoji","Emoji_Keycap_Sequence","RGI_Emoji_Modifier_Sequence","RGI_Emoji_Flag_Sequence","RGI_Emoji_Tag_Sequence","RGI_Emoji_ZWJ_Sequence","RGI_Emoji"].join("|");function $(e){let t=new RegExp(String.raw`
\\ (?:
    c [A-Za-z]
  | p \{ (?<pPropOfStr> ${Y} ) \}
  | [pP] \{ [^\}]+ \}
  | (?<qPropOfStr> q )
  | u (?: [A-Fa-f\d]{4} | \{ [A-Fa-f\d]+ \} )
  | x [A-Fa-f\d]{2}
  | .
)
| --
| &&
| .
  `.replace(/\s+/g,""),"gsu"),r=!1,n;for(let{0:o,groups:f}of e.matchAll(t)){if(f.pPropOfStr||f.qPropOfStr||o==="["&&r)return!0;if(["-","--","&&"].includes(o))r=!1;else if(!["[","]"].includes(o)){if(r||n==="]")return!0;r=!0}n=o}return!1}function D(e,t,r){let n={raw:[]},o=[],f={};return e.raw.forEach((i,l)=>{let u=r(i,{...f,lastPos:0});if(n.raw.push(u.transformed),f=u.runningContext,l<e.raw.length-1){let c=t[l];if(c instanceof m){let p=r(c,{...f,lastPos:0});o.push(_(p.transformed)),f=p.runningContext}else o.push(c)}}),{template:n,values:o}}function M(e){if(!G(e,String.raw`\(\?>`))return e;let t=new RegExp(String.raw`(?<noncapturingStart>\(\?(?:[:=!>]|<[=!]|[ims\-]+:))|(?<capturingStart>\((?:\?<[^>]+>)?)|(?<backrefNum>\\[1-9]\d*)|\\?.`,"gsu"),r=3,n,o=0,f=0,i=NaN;do{n=!1;let l=0,u=0,c=!1,p;for(t.lastIndex=Number.isNaN(i)?0:i+r;p=t.exec(e);){let{0:a,index:d,groups:{backrefNum:A,capturingStart:S,noncapturingStart:w}}=p;if(a==="[")l++;else if(l)a==="]"&&l--;else if(a==="(?>"&&!c)i=d,c=!0;else if(c&&w)u++;else if(S)c&&u++,o++;else if(a===")"&&c){if(!u){f++,e=`${e.slice(0,i)}(?:(?=(${e.slice(i+r,d)}))\\k<${f+o}>)${e.slice(d+1)}`,n=!0,o--;break}u--}else if(A)throw new Error(`Invalid decimal escape "${a}" in interpolated regex; cannot be used with atomic group`)}}while(n);return e=N(e,String.raw`\\k<(?<backrefNum>\d+)>`,({groups:{backrefNum:l}})=>`\\${l}`,s.DEFAULT),e}function y(e,t){e=String(e);let r="",n="";for(let[o]of e.matchAll(T)){r+=o,t=g(r,t);let{regexContext:f}=t;if(f===s.DEFAULT)if(o==="(")n+="(?:";else{if(/^\\[1-9]/.test(o))throw new Error(`Invalid decimal escape "${o}" with implicit flag n; replace with named backreference`);n+=o}else n+=o}return{transformed:n,runningContext:t}}var j=/^\s$/,ee=/^\\[\s#]$/,Q=/^[ \t]$/,te=/^\\[ \t]$/;function H(e,t){e=String(e);let r=!1,n=!1,o=!1,f="",i="",l="",u="",c=!1,p=(a,{prefix:d=!0,postfix:A=!1}={})=>(a=(c&&d?"(?:)":"")+a+(A?"(?:)":""),c=!1,a);for(let[a]of e.matchAll(T)){if(o){a===`
`&&(o=!1,c=!0);continue}if(r){if(j.test(a))continue;r=!1,c=!0}else if(n){if(Q.test(a))continue;n=!1}f+=a,t=g(f,t);let{regexContext:d,charClassContext:A}=t;if(a==="-"&&d===s.CHAR_CLASS&&u===E.RANGE)throw new Error("Invalid unescaped hyphen as the end value for a range");if(d===s.DEFAULT&&/^[?*+]\??$/.test(a)||d===s.INTERVAL_QUANTIFIER&&a==="{")i+=p(a,{prefix:!1,postfix:l==="("});else if(d===s.DEFAULT)j.test(a)?r=!0:a.startsWith("#")?o=!0:ee.test(a)?i+=p(a[1],{prefix:!1}):i+=p(a);else if(d===s.CHAR_CLASS&&a!=="["&&a!=="[^")if(Q.test(a)&&(A===E.DEFAULT||A===E.RANGE||A===E.Q_TOKEN))n=!0;else{if(A===E.INVALID_INCOMPLETE_TOKEN)throw new Error(`Invalid incomplete token in character class: "${a}"`);te.test(a)&&(A===E.DEFAULT||A===E.Q_TOKEN)?i+=p(a[1],{prefix:!1}):A===E.DEFAULT?i+=p(I(O(a))):i+=p(a)}else i+=p(a);r||n||o||(l=a,u=A)}return{transformed:i,runningContext:t}}function q(e){let t=String.raw`\(\?:\)`;return e=N(e,`${t}(?:${t})+`,"(?:)",s.DEFAULT),e=N(e,String.raw`^${t}(?![?*+{])|${t}$|${t}(?=[()|$\\])|(?<=[()|>^]|\(\?(?:[:=!]|<[=!]))${t}`,"",s.DEFAULT),e}function P(e,...t){let r=this instanceof Function?this:RegExp;if(Array.isArray(e?.raw))return F(r,{flags:""},e,...t);if((typeof e=="string"||e===void 0)&&!t.length)return F.bind(null,r,{flags:e});if({}.toString.call(e)==="[object Object]"&&!t.length)return F.bind(null,r,e);throw new Error(`Unexpected arguments: ${JSON.stringify([e,...t])}`)}function F(e,t,r,...n){let{flags:o="",__flagN:f=!0,__flagX:i=!0,__rake:l=t.__flagX??!0}=t;if(/[vu]/.test(o))throw new Error("Flags v/u cannot be explicitly added since v is always enabled");i&&({template:r,values:n}=D(r,n,H)),f&&({template:r,values:n}=D(r,n,y));let u=0,c="",p={};return r.raw.forEach((a,d)=>{let A=r.raw[d]||r.raw[d+1];u+=U(a),c+=O(a,s.CHAR_CLASS),p=g(c,p);let{regexContext:S,charClassContext:w}=p;if(d<r.raw.length-1){let b=re(n[d],o,S,w,A,u);u+=b.capturesAdded||0,c+=b.value}}),c=M(c),new e(l?q(c):c,`v${o}`)}function re(e,t,r,n,o,f){if(e instanceof RegExp&&r!==s.DEFAULT)throw new Error("Cannot interpolate a RegExp at this position because the syntax context does not match");if(r===s.INVALID_INCOMPLETE_TOKEN||n===E.INVALID_INCOMPLETE_TOKEN)throw new Error("Interpolation preceded by invalid incomplete token");let i=e instanceof m,l;if(!(e instanceof RegExp)){e=String(e),i||(l=C(e,r));let u=k(l||e,r,n);if(u)throw new Error(`Unescaped stray "${u}" in the interpolated value would have side effects outside it`)}if(r===s.ENCLOSED_TOKEN||r===s.INTERVAL_QUANTIFIER||r===s.GROUP_NAME||n===E.ENCLOSED_TOKEN||n===E.Q_TOKEN)return{value:i?e:l};if(r===s.CHAR_CLASS){if(i){if(N(e,"^-|^&&|-$|&&$","")!==e)throw new Error("In character classes, a partial cannot use a range/set operator at its boundary; move the operation into the partial or the operator outside of it");let c=x(I(e));return{value:$(e)?`[${c}]`:O(c)}}return{value:$(l)?`[${l}]`:l}}if(e instanceof RegExp){let u=ne(e,t),c=V(u.value,f);return{value:u.usedModifier?c:`(?:${c})`,capturesAdded:U(e.source)}}return i?{value:`(?:${e})`}:{value:o?`(?:${l})`:l}}function ne(e,t){let r={i:null,m:null,s:null},n="\\n\\r\\u2028\\u2029",o=e.source;if(e.ignoreCase!==t.includes("i"))if(L)r.i=e.ignoreCase;else throw new Error("Pattern modifiers not supported, so the value of flag i on the interpolated RegExp must match the outer regex");if(e.dotAll!==t.includes("s")&&(L?r.s=e.dotAll:o=N(o,"\\.",e.dotAll?"[^]":`[^${n}]`,s.DEFAULT)),e.multiline!==t.includes("m")&&(L?r.m=e.multiline:(o=N(o,"\\^",e.multiline?`(?<=^|[${n}])`:"(?<![^])",s.DEFAULT),o=N(o,"\\$",e.multiline?`(?=$|[${n}])`:"(?![^])",s.DEFAULT))),L){let f=Object.keys(r),i=f.filter(u=>r[u]===!0).join(""),l=f.filter(u=>r[u]===!1).join("");if(l&&(i+=`-${l}`),i)return{value:`(?${i}:${o})`,usedModifier:!0}}return{value:o}}var W=P;var oe={make:W,partial:_,regex:P};return J(se);})();
//! regex 1.1.0; Steven Levithan; MIT License
//# sourceMappingURL=regex.min.js.map
