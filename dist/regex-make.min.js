var Regex=(()=>{var d=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var P=(e,n)=>{for(var t in n)d(e,t,{get:n[t],enumerable:!0})},M=(e,n,t,r)=>{if(n&&typeof n=="object"||typeof n=="function")for(let i of K(n))!h.call(e,i)&&i!==t&&d(e,i,{get:()=>n[i],enumerable:!(r=$(n,i))||r.enumerable});return e};var C=e=>M(d({},"__esModule",{value:!0}),e);var q={};P(q,{default:()=>k,make:()=>D,partial:()=>g});var o={DEFAULT:"R_DEFAULT",CHAR_CLASS:"R_CHAR_CLASS",GROUP_NAME:"R_GROUP_NAME",ENCLOSED_TOKEN:"R_ENCLOSED_TOKEN",INTERVAL_QUANTIFIER:"R_INTERVAL_QUANTIFIER",INVALID_INCOMPLETE_TOKEN:"R_INVALID_INCOMPLETE_TOKEN"},s={DEFAULT:"CC_DEFAULT",ENCLOSED_TOKEN:"CC_ENCLOSED_TOKEN",Q_TOKEN:"CC_Q_TOKEN",INVALID_INCOMPLETE_TOKEN:"CC_INVALID_INCOMPLETE_TOKEN"},N=(()=>{let e=!0;try{new RegExp("(?i-ms:)")}catch{e=!1}return e})(),R="&!#$%*+,.:;<=>?@^`~";function S(e,n){return n===o.CHAR_CLASS?e.replace(new RegExp(String.raw`[()\[\]{}|\\/\-${R}]`,"g"),"\\$&"):e.replace(/[()\[\]{}|\\^$*+?.]/g,"\\$&")}function m(e){return e.replace(new RegExp(`^[${R}]`),(n,t)=>`\\${n}${t+1===e.length?"":n}`)}function O(e,n){return _(e,String.raw`\\0(?!\d)`,"\\u{0}",n)}function w(e,n,t){let r=e.replace(/\\./gsu,"");if(r.at(-1)==="\\")return"\\";if(n===o.DEFAULT&&r.includes(")"))return")";if(n===o.CHAR_CLASS&&t===s.DEFAULT){let i=0;for(let[f]of r.matchAll(/[\[\]]/g))if(i+=f==="["?1:-1,i<0)return"]"}return(n===o.ENCLOSED_TOKEN||n===o.INTERVAL_QUANTIFIER||t===s.ENCLOSED_TOKEN||t===s.Q_TOKEN)&&r.includes("}")?"}":n===o.GROUP_NAME&&r.includes(">")?">":""}function I(e){return new RegExp(String.raw`
  (?<groupN> \(\?< (?! [=!] ) | \\k< )
| (?<enclosedT> \\[pPu]\{ )
| (?<qT> \\q\{ )
| (?<intervalQ> \{ )
| (?<incompleteT> \\ (?:
    $
  | c (?! [A-Za-z] )
  | u (?! [A-Fa-f\d]{4} ) [A-Fa-f\d]{0,3}
  | x (?! [A-Fa-f\d]{2} ) [A-Fa-f\d]?
  )
)
| \\.
${e?String.raw`| (?<x> (?: \s+ | #[^\n]*\n? )+ )`:""}
| .
  `.replace(/\s+/g,""),"gsu")}var V={withoutX:I(!1),withX:I(!0)};function F(e,{regexContext:n=o.DEFAULT,charClassContext:t=s.DEFAULT,charClassDepth:r=0,lastPos:i=0}){let f=V.withoutX;f.lastIndex=i;let u;for(;u=f.exec(e);){let{0:E,groups:{groupN:l,enclosedT:A,qT:T,intervalQ:a,incompleteT:p}}=u;E==="["?(r++,n=o.CHAR_CLASS,t=s.DEFAULT):E==="]"&&n===o.CHAR_CLASS?(r&&r--,r||(n=o.DEFAULT),t=s.DEFAULT):n===o.CHAR_CLASS?p?t=s.INVALID_INCOMPLETE_TOKEN:A?t=s.ENCLOSED_TOKEN:T?t=s.Q_TOKEN:(E==="}"&&(t===s.ENCLOSED_TOKEN||t===s.Q_TOKEN)||t===s.INVALID_INCOMPLETE_TOKEN)&&(t=s.DEFAULT):p?n=o.INVALID_INCOMPLETE_TOKEN:l?n=o.GROUP_NAME:A?n=o.ENCLOSED_TOKEN:a?n=o.INTERVAL_QUANTIFIER:(E===">"&&n===o.GROUP_NAME||E==="}"&&(n===o.ENCLOSED_TOKEN||n===o.INTERVAL_QUANTIFIER)||n===o.INVALID_INCOMPLETE_TOKEN)&&(n=o.DEFAULT)}return{regexContext:n,charClassContext:t,charClassDepth:r,lastPos:e.length-1}}function _(e,n,t,r){let i=new RegExp(String.raw`(?!${n})\\.|(?<found>${n})|.`,"gsu"),f=0,u="";for(let{0:E,groups:{found:l}}of e.matchAll(i)){if(l&&(!r||r===o.DEFAULT==!f)){u+=t;continue}E==="["?f++:E==="]"&&f--,u+=E}return u}var b=["Basic_Emoji","Emoji_Keycap_Sequence","RGI_Emoji_Modifier_Sequence","RGI_Emoji_Flag_Sequence","RGI_Emoji_Tag_Sequence","RGI_Emoji_ZWJ_Sequence","RGI_Emoji"].join("|");function L(e){let n=new RegExp(String.raw`
\\ (?:
    c [A-Za-z]
  | p \{ (?<pPropOfStr> ${b} ) \}
  | [pP] \{ [^\}]+ \}
  | (?<qPropOfStr> q )
  | u (?: [A-Fa-f\d]{4} | \{ [A-Fa-f\d]+ \} )
  | x [A-Fa-f\d]{2}
  | .
)
| --
| &&
| .
  `.replace(/\s+/g,""),"gsu"),t=!1,r;for(let{0:i,groups:f}of e.matchAll(n)){if(f.pPropOfStr||f.qPropOfStr||i==="["&&t)return!0;if(["-","--","&&"].includes(i))t=!1;else if(!["[","]"].includes(i)){if(t||r==="]")return!0;t=!0}r=i}return!1}function D(e,...n){let t=this instanceof Function?this:RegExp;if(Array.isArray(e?.raw))return U(t,"",e,...n);if((typeof e=="string"||e===void 0)&&!n.length)return U.bind(null,t,e??"");throw new Error(`Unexpected arguments: ${JSON.stringify([e,...n])}`)}function U(e,n,t,...r){if(/[vu]/.test(n))throw new Error("Flags v/u cannot be explicitly added since v is always enabled");let i=!1,f={},u="";return t.raw.forEach((E,l)=>{E!==""&&(i=!0),u+=O(E,o.CHAR_CLASS),f=F(u,f);let{regexContext:A,charClassContext:T}=f;if(l<t.raw.length-1){let a=r[l];(a instanceof RegExp||a instanceof c)&&(i=!0);let p=y(a,n,A,T,i);u+=p}}),new e(u,`v${n}`)}function y(e,n,t,r,i){if(e instanceof RegExp&&t!==o.DEFAULT)throw new Error("Cannot interpolate a RegExp at this position because the syntax context does not match");if(t===o.INVALID_INCOMPLETE_TOKEN||r===s.INVALID_INCOMPLETE_TOKEN)throw new Error("Interpolation preceded by invalid incomplete token");let f=e instanceof c,u;if(!(e instanceof RegExp)){e=String(e),f||(u=S(e,t));let E=w(u||e,t,r);if(E)throw new Error(`Unescaped stray "${E}" in the interpolated value would have side effects outside it`)}if(t===o.ENCLOSED_TOKEN||t===o.INTERVAL_QUANTIFIER||t===o.GROUP_NAME||r===s.ENCLOSED_TOKEN||r===s.Q_TOKEN)return f?e:u;if(t===o.CHAR_CLASS){if(f){let E=m(e);return L(e)?`[${E}]`:O(E)}return L(u)?`[${u}]`:u}if(e instanceof RegExp){let E=Q(e,n);return E.usedModifier?E.value:`(?:${E.value})`}return f?`(?:${e})`:i?`(?:${u})`:u}function Q(e,n){let t={i:null,m:null,s:null},r="\\n\\r\\u2028\\u2029",i=e.source;if(e.ignoreCase!==n.includes("i"))if(N)t.i=e.ignoreCase;else throw new Error("Pattern modifiers not supported, so the value of flag i on the interpolated RegExp must match the outer regex");if(e.dotAll!==n.includes("s")&&(N?t.s=e.dotAll:i=_(i,"\\.",e.dotAll?"[^]":`[[^]--[${r}]]`,o.DEFAULT)),e.multiline!==n.includes("m")&&(N?t.m=e.multiline:(i=_(i,"\\^",e.multiline?`(?<=^|[${r}])`:"(?<![^])",o.DEFAULT),i=_(i,"\\$",e.multiline?`(?=$|[${r}])`:"(?![^])",o.DEFAULT))),N){let f=Object.keys(t),u=f.filter(l=>t[l]===!0).join(""),E=f.filter(l=>t[l]===!1).join("");if(E&&(u+=`-${E}`),u)return{value:`(?${u}:${i})`,usedModifier:!0}}return{value:i}}var c=class{#e;constructor(n){this.#e=n}toString(){return String(this.#e)}};function g(e,...n){if(Array.isArray(e?.raw))return new c(e.raw.flatMap((t,r)=>r<e.raw.length-1?[t,n[r]]:t).join(""));if(!n.length)return new c(e??"");throw new Error(`Unexpected arguments: ${JSON.stringify([e,...n])}`)}var j={make:D,partial:g};var k=j;return C(q);})();
//! Regex.make 0.1.0 alpha; Steven Levithan; MIT License
//# sourceMappingURL=regex-make.min.js.map
