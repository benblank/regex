var Regex=(()=>{var R=Object.defineProperty;var q=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var B=(e,r)=>{for(var t in r)R(e,t,{get:r[t],enumerable:!0})},X=(e,r,t,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of W(r))!v.call(e,o)&&o!==t&&R(e,o,{get:()=>r[o],enumerable:!(n=q(r,o))||n.enumerable});return e};var Z=e=>X(R({},"__esModule",{value:!0}),e);var se={};B(se,{default:()=>oe,make:()=>H,partial:()=>_});var N=class{#e;constructor(r){this.#e=r}toString(){return String(this.#e)}};function _(e,...r){if(Array.isArray(e?.raw))return new N(e.raw.flatMap((t,n)=>n<e.raw.length-1?[t,r[n]]:t).join(""));if(!r.length)return new N(e??"");throw new Error(`Unexpected arguments: ${JSON.stringify([e,...r])}`)}var s={DEFAULT:"DEFAULT",CHAR_CLASS:"CHAR_CLASS",GROUP_NAME:"GROUP_NAME",ENCLOSED_TOKEN:"ENCLOSED_TOKEN",INTERVAL_QUANTIFIER:"INTERVAL_QUANTIFIER",INVALID_INCOMPLETE_TOKEN:"INVALID_INCOMPLETE_TOKEN"},E={DEFAULT:"CC_DEFAULT",RANGE:"CC_RANGE",ENCLOSED_TOKEN:"CC_ENCLOSED_TOKEN",Q_TOKEN:"CC_Q_TOKEN",INVALID_INCOMPLETE_TOKEN:"CC_INVALID_INCOMPLETE_TOKEN"},g=(()=>{let e=!0;try{new RegExp("(?i-ms:)")}catch{e=!1}return e})(),h="&!#$%*+,.:;<=>?@^`~";function C(e,r){return r===s.CHAR_CLASS?e.replace(new RegExp(String.raw`[()\[\]{}|\\/\-${h}]`,"g"),"\\$&"):e.replace(/[()\[\]{}|\\^$*+?.]/g,"\\$&")}function O(e){return e.replace(new RegExp(String.raw`^([${h}])(?!\1)`),(r,t,n)=>`\\${r}${n+1===e.length?"":r}`)}function K(e){return e.replace(/^\^/,"\\^^")}function L(e,r){return A(e,String.raw`\\0(?!\d)`,"\\u{0}",r)}function b(e,r,t){let n=0;for(let[o]of e.matchAll(new RegExp(`[${C(r+t)}]`,"g")))if(n+=o===r?1:-1,n<0)return t;return n>0?r:""}function k(e,r,t){let n=e.replace(/\\./gsu,"");if(n.at(-1)==="\\")return"\\";if(r===s.DEFAULT)return b(n,"(",")");if(r===s.CHAR_CLASS&&!(t===E.ENCLOSED_TOKEN||t===E.Q_TOKEN))return b(n,"[","]");if(r===s.ENCLOSED_TOKEN||r===s.INTERVAL_QUANTIFIER||t===E.ENCLOSED_TOKEN||t===E.Q_TOKEN){if(n.includes("}"))return"}"}else if(r===s.GROUP_NAME&&n.includes(">"))return">";return""}var m=new RegExp(String.raw`
  (?<groupN> \(\?< (?! [=!] ) | \\k< )
| (?<enclosedT> \\[pPu]\{ )
| (?<qT> \\q\{ )
| (?<intervalQ> \{ )
| (?<incompleteT> \\ (?:
    $
  | c (?! [A-Za-z] )
  | u (?! [A-Fa-f\d]{4} ) [A-Fa-f\d]{0,3}
  | x (?! [A-Fa-f\d]{2} ) [A-Fa-f\d]?
  )
)
| \\ (?:
    c [A-Za-z]
  | u [A-Fa-f\d]{4}
  | x [A-Fa-f\d]{2}
  | 0 \d+
)
| \[\^
| \(\?[:=!<>]
| (?<dp> [${h}] ) \k<dp>
| \\[1-9]\d*
| --
| \\? .
`.replace(/\s+/g,""),"gsu");function T(e,{regexContext:r=s.DEFAULT,charClassContext:t=E.DEFAULT,charClassDepth:n=0,lastPos:o=0}){m.lastIndex=o;let u;for(;u=m.exec(e);){let{0:i,groups:{groupN:c,enclosedT:f,qT:l,intervalQ:a,incompleteT:p}}=u;i==="["||i==="[^"?(n++,r=s.CHAR_CLASS,t=E.DEFAULT):i==="]"&&r===s.CHAR_CLASS?(n&&n--,n||(r=s.DEFAULT),t=E.DEFAULT):r===s.CHAR_CLASS?p?t=E.INVALID_INCOMPLETE_TOKEN:i==="-"?t=E.RANGE:f?t=E.ENCLOSED_TOKEN:l?t=E.Q_TOKEN:(i==="}"&&(t===E.ENCLOSED_TOKEN||t===E.Q_TOKEN)||t===E.INVALID_INCOMPLETE_TOKEN||t===E.RANGE)&&(t=E.DEFAULT):p?r=s.INVALID_INCOMPLETE_TOKEN:c?r=s.GROUP_NAME:f?r=s.ENCLOSED_TOKEN:a?r=s.INTERVAL_QUANTIFIER:(i===">"&&r===s.GROUP_NAME||i==="}"&&(r===s.ENCLOSED_TOKEN||r===s.INTERVAL_QUANTIFIER)||r===s.INVALID_INCOMPLETE_TOKEN)&&(r=s.DEFAULT)}return{regexContext:r,charClassContext:t,charClassDepth:n,lastPos:e.length-1}}function A(e,r,t,n){let o=new RegExp(String.raw`(?<found>${r})|\\?.`,"gsu"),u=0,i="";for(let c of e.matchAll(o)){let{0:f,groups:{found:l}}=c;if(l&&(!n||n===s.DEFAULT==!u)){t instanceof Function?i+=t(c):i+=t;continue}f==="["?u++:f==="]"&&u&&u--,i+=f}return i}function F(e){let r=/(?<capture>\((?:(?!\?)|\?<[^>]+>))|\\?./gsu;return Array.from(e.matchAll(r)).filter(t=>t.groups.capture).length}function G(e,r){return e.replace(/\\([1-9]\d*)|\\?./gsu,(t,n)=>n?"\\"+(Number(n)+r):t)}var z=["Basic_Emoji","Emoji_Keycap_Sequence","RGI_Emoji_Modifier_Sequence","RGI_Emoji_Flag_Sequence","RGI_Emoji_Tag_Sequence","RGI_Emoji_ZWJ_Sequence","RGI_Emoji"].join("|");function U(e){let r=new RegExp(String.raw`
\\ (?:
    c [A-Za-z]
  | p \{ (?<pPropOfStr> ${z} ) \}
  | [pP] \{ [^\}]+ \}
  | (?<qPropOfStr> q )
  | u (?: [A-Fa-f\d]{4} | \{ [A-Fa-f\d]+ \} )
  | x [A-Fa-f\d]{2}
  | .
)
| --
| &&
| .
  `.replace(/\s+/g,""),"gsu"),t=!1,n;for(let{0:o,groups:u}of e.matchAll(r)){if(u.pPropOfStr||u.qPropOfStr||o==="["&&t)return!0;if(["-","--","&&"].includes(o))t=!1;else if(!["[","]"].includes(o)){if(t||n==="]")return!0;t=!0}n=o}return!1}function $(e,r,t){let n={raw:[]},o=[],u={};return e.raw.forEach((i,c)=>{let f=t(i,{...u,lastPos:0});if(n.raw.push(f.transformed),u=f.runningContext,c<e.raw.length-1){let l=r[c];if(l instanceof N){let a=t(l,{...u,lastPos:0});o.push(_(a.transformed)),u=a.runningContext}else o.push(l)}}),{template:n,values:o}}function x(e){if(!J(e,String.raw`\(\?>`))return e;let r=new RegExp(String.raw`(?<noncapturingStart>\(\?(?:[:=!>]|<[=!]))|(?<capturingStart>\((?:\?<[^>]+>)?)|(?<backrefNum>\\[1-9]\d*)|\\?.`,"gsu"),t=3,n,o=0,u=0,i=NaN;do{n=!1;let c=0,f=0,l=!1,a;for(r.lastIndex=Number.isNaN(i)?0:i+t;a=r.exec(e);){let{0:p,index:d,groups:{backrefNum:I,capturingStart:S,noncapturingStart:w}}=a;if(p==="[")c++;else if(c)p==="]"&&c--;else if(p==="(?>"&&!l)i=d,l=!0;else if(l&&w)f++;else if(S)l&&f++,o++;else if(p===")"&&l){if(!f){u++,e=`${e.slice(0,i)}(?:(?=(${e.slice(i+t,d)}))\\k<${u+o}>)${e.slice(d+1)}`,n=!0,o--;break}f--}else if(I)throw new Error(`Invalid delimal escape "${p}" in interpolated regex used with atomic group`)}}while(n);return e=A(e,String.raw`\\k<(?<backrefNum>\d+)>`,({groups:{backrefNum:c}})=>`\\${c}`,s.DEFAULT),e}function J(e,r){if(!new RegExp(r,"su").test(e))return!1;let t=new RegExp(String.raw`(?<found>${r})|\\?.`,"gsu"),n=0;for(let{0:o,groups:{found:u}}of e.matchAll(t))if(o==="[")n++;else if(n)o==="]"&&n--;else if(u)return!0;return!1}function V(e,r){e=String(e);let t="",n="";for(let[o]of e.matchAll(m)){t+=o,r=T(t,r);let{regexContext:u}=r;if(u===s.DEFAULT)if(o==="(")n+="(?:";else{if(/^\\[1-9]/.test(o))throw new Error(`Invalid delimal escape "${o}" with implicit flag n; replace with named backreference`);n+=o}else n+=o}return{transformed:n,runningContext:r}}var M=/^\s$/,Y=/^\\[\s#]$/,y=/^[ \t]$/,ee=/^\\[ \t]$/;function j(e,r){e=String(e);let t=!1,n=!1,o=!1,u="",i="",c="",f=!1,l=(a,{prefix:p=!0,postfix:d=!1}={})=>(a=(f&&p?"(?:)":"")+a+(d?"(?:)":""),f=!1,a);for(let[a]of e.matchAll(m)){if(o){a===`
`&&(o=!1,f=!0);continue}if(t){if(M.test(a))continue;t=!1,f=!0}else if(n){if(y.test(a))continue;n=!1}u+=a,r=T(u,r);let{regexContext:p,charClassContext:d}=r;if(a==="-"&&p===s.CHAR_CLASS&&c===E.RANGE)throw new Error("Invalid unescaped hyphen as the end value for a range");if(p===s.DEFAULT&&/^[?*+]\??$/.test(a)||p===s.INTERVAL_QUANTIFIER&&a==="{")i+=l(a,{prefix:!1,postfix:a==="?"});else if(p===s.DEFAULT)M.test(a)?t=!0:a.startsWith("#")?o=!0:Y.test(a)?i+=l(a[1],{prefix:!1}):i+=l(a);else if(p===s.CHAR_CLASS&&a!=="["&&a!=="[^")if(y.test(a)&&(d===E.DEFAULT||d===E.RANGE||d===E.Q_TOKEN))n=!0;else{if(d===E.INVALID_INCOMPLETE_TOKEN)throw new Error(`Invalid incomplete token in character class: ${a}`);ee.test(a)&&(d===E.DEFAULT||d===E.Q_TOKEN)?i+=l(a[1],{prefix:!1}):d===E.DEFAULT?i+=l(O(L(a))):i+=l(a)}else i+=l(a);t||n||o||(c=d)}return{transformed:i,runningContext:r}}function Q(e){let r=String.raw`\(\?:\)`;return e=A(e,`${r}(?:${r})+`,"(?:)",s.DEFAULT),e=A(e,String.raw`^${r}(?![?*+{])|${r}$|${r}(?=[()|\\])|(?<=[()|>]|\(\?(?:[:=!]|<[=!]))${r}`,"",s.DEFAULT),e}function H(e,...r){let t=this instanceof Function?this:RegExp;if(Array.isArray(e?.raw))return D(t,{flags:""},e,...r);if((typeof e=="string"||e===void 0)&&!r.length)return D.bind(null,t,{flags:e});if({}.toString.call(e)==="[object Object]"&&!r.length)return D.bind(null,t,e);throw new Error(`Unexpected arguments: ${JSON.stringify([e,...r])}`)}function D(e,r,t,...n){let{flags:o="",__flagN:u=!0,__flagX:i=!0,__rake:c=r.__flagX??!0}=r;if(/[vu]/.test(o))throw new Error("Flags v/u cannot be explicitly added since v is always enabled");i&&({template:t,values:n}=$(t,n,j)),u&&({template:t,values:n}=$(t,n,V));let f=0,l="",a={};return t.raw.forEach((p,d)=>{let I=t.raw[d]||t.raw[d+1];f+=F(p),l+=L(p,s.CHAR_CLASS),a=T(l,a);let{regexContext:S,charClassContext:w}=a;if(d<t.raw.length-1){let P=re(n[d],o,S,w,I,f);f+=P.capturesAdded||0,l+=P.value}}),l=x(l),new e(c?Q(l):l,`v${o}`)}function re(e,r,t,n,o,u){if(e instanceof RegExp&&t!==s.DEFAULT)throw new Error("Cannot interpolate a RegExp at this position because the syntax context does not match");if(t===s.INVALID_INCOMPLETE_TOKEN||n===E.INVALID_INCOMPLETE_TOKEN)throw new Error("Interpolation preceded by invalid incomplete token");let i=e instanceof N,c;if(!(e instanceof RegExp)){e=String(e),i||(c=C(e,t));let f=k(c||e,t,n);if(f)throw new Error(`Unescaped stray "${f}" in the interpolated value would have side effects outside it`)}if(t===s.ENCLOSED_TOKEN||t===s.INTERVAL_QUANTIFIER||t===s.GROUP_NAME||n===E.ENCLOSED_TOKEN||n===E.Q_TOKEN)return{value:i?e:c};if(t===s.CHAR_CLASS){if(i){if(A(e,"^-|^&&|-$|&&$","")!==e)throw new Error("In character classes, a partial cannot use a range/set operator at its boundary; move the operation into the partial or the operator outside of it");let l=K(O(e));return{value:U(e)?`[${l}]`:L(l)}}return{value:U(c)?`[${c}]`:c}}if(e instanceof RegExp){let f=te(e,r),l=G(f.value,u);return{value:f.usedModifier?l:`(?:${l})`,capturesAdded:F(e.source)}}return i?{value:`(?:${e})`}:{value:o?`(?:${c})`:c}}function te(e,r){let t={i:null,m:null,s:null},n="\\n\\r\\u2028\\u2029",o=e.source;if(e.ignoreCase!==r.includes("i"))if(g)t.i=e.ignoreCase;else throw new Error("Pattern modifiers not supported, so the value of flag i on the interpolated RegExp must match the outer regex");if(e.dotAll!==r.includes("s")&&(g?t.s=e.dotAll:o=A(o,"\\.",e.dotAll?"[^]":`[^${n}]`,s.DEFAULT)),e.multiline!==r.includes("m")&&(g?t.m=e.multiline:(o=A(o,"\\^",e.multiline?`(?<=^|[${n}])`:"(?<![^])",s.DEFAULT),o=A(o,"\\$",e.multiline?`(?=$|[${n}])`:"(?![^])",s.DEFAULT))),g){let u=Object.keys(t),i=u.filter(f=>t[f]===!0).join(""),c=u.filter(f=>t[f]===!1).join("");if(c&&(i+=`-${c}`),i)return{value:`(?${i}:${o})`,usedModifier:!0}}return{value:o}}var ne={make:H,partial:_};var oe=ne;return Z(se);})();
//! Regex.make 1.0.0-beta; Steven Levithan; MIT License
//# sourceMappingURL=regex-make.min.js.map
